// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GameSwapRequest game swap request
//
// swagger:model GameSwapRequest
type GameSwapRequest struct {

	// new player id
	// Required: true
	NewPlayerID *string `json:"new_player_id"`

	// player pick id
	// Required: true
	PlayerPickID *string `json:"player_pick_id"`
}

// Validate validates this game swap request
func (m *GameSwapRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNewPlayerID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlayerPickID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GameSwapRequest) validateNewPlayerID(formats strfmt.Registry) error {

	if err := validate.Required("new_player_id", "body", m.NewPlayerID); err != nil {
		return err
	}

	return nil
}

func (m *GameSwapRequest) validatePlayerPickID(formats strfmt.Registry) error {

	if err := validate.Required("player_pick_id", "body", m.PlayerPickID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this game swap request based on context it is used
func (m *GameSwapRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GameSwapRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GameSwapRequest) UnmarshalBinary(b []byte) error {
	var res GameSwapRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
